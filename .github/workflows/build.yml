name: Build

on:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/build.yml'

jobs:
  build_macos:
    name: Build macOS
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        run: make

      - name: Upload static library
        uses: actions/upload-artifact@v4
        with:
          name: librapidyenc_darwin
          path: librapidyenc_darwin.a

  build_windows:
    name: Build Windows x64
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          pacboy: >-
            gcc:p
            cmake:p
            ninja:p
            make:p

      - name: Build
        run: make

      - name: Upload shared library
        uses: actions/upload-artifact@v4
        with:
          name: librapidyenc_windows_amd64
          path: librapidyenc_windows_amd64.a

  build_linux:
    name: Build ${{ matrix.platform }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - platform: linux/amd64
            library: librapidyenc_linux_amd64.a
          - platform: linux/arm64
            library: librapidyenc_linux_arm64.a

    steps:
      - name: Setup Cross Compiler (common)
        run: |
          sudo apt-get install --yes --no-install-recommends \
          build-essential musl-tools

      - name: Setup Cross Compiler (linux/arm64)
        if: matrix.platform == 'linux/arm64'
        run: |
          sudo apt-get install --yes --no-install-recommends \
          gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu g++-aarch64-linux-gnu gcc-arm-linux-gnueabi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build
        run: make ${{ matrix.platform }}

      - name: Upload static library
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.library }}
          path: ${{ matrix.library }}

  test:
    name: Test ${{ matrix.os }} go/${{ matrix.go }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, windows-latest]
        go: [1.22]
    runs-on: ${{ matrix.os }}
    needs: [build_linux, build_macos, build_windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go ${{ matrix.go }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/download-artifact@v4
        with:
          pattern: librapidyenc_*
          merge-multiple: true
      - name: Run tests
        run: go run gotest.tools/gotestsum@latest --junitfile unit-tests.xml --format pkgname -- ./...
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "unit-tests.xml"

  publish:
    name: Publish rapidyenc build
    runs-on: ubuntu-latest

    needs: [test]

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/download-artifact@v4
        with:
          pattern: librapidyenc_*
          merge-multiple: true
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: '*.a'
          commit_message: Built rapidyenc